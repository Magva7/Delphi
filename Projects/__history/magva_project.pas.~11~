unit magva_project;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics, Vcl.Controls, Vcl.Forms, Vcl.Dialogs,
  Vcl.StdCtrls, Vcl.ExtCtrls, Vcl.ComCtrls, DateUtils, MMSystem, System.UITypes;

type
  TForm1 = class(TForm)
    EditTask: TEdit;
    BtnAdd: TButton;
    ListBoxTasks: TListBox;
    BtnDelete: TButton;
    DateTimePickerReminder: TDateTimePicker;
    TimerCheck: TTimer;
    CheckBoxReminder: TCheckBox;
    SaveDialog1: TSaveDialog;
    OpenDialog1: TOpenDialog;
    procedure BtnAddClick(Sender: TObject);
    procedure BtnDeleteClick(Sender: TObject);
    procedure TimerCheckTimer(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
  private
    procedure SaveTasksToFile;
    procedure LoadTasksFromFile;
    procedure NotifyUser(const Msg: string);
  public
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

const
  SaveFileName = 'tasks.txt';

procedure TForm1.SaveTasksToFile;
begin
  try
    ListBoxTasks.Items.SaveToFile(SaveFileName);
  except
    on E: Exception do
      ShowMessage('Ошибка сохранения задач: ' + E.Message);
  end;
end;

procedure TForm1.LoadTasksFromFile;
begin
  try
    if FileExists(SaveFileName) then
      ListBoxTasks.Items.LoadFromFile(SaveFileName);
  except
    on E: Exception do
      ShowMessage('Ошибка загрузки задач: ' + E.Message);
  end;
end;

procedure TForm1.FormCreate(Sender: TObject);
begin
  LoadTasksFromFile;
end;

procedure TForm1.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  SaveTasksToFile;
end;

procedure TForm1.BtnAddClick(Sender: TObject);
var
  TaskText, ReminderText: string;
begin
  if Trim(EditTask.Text) = '' then Exit;

  if CheckBoxReminder.Checked then
    ReminderText := ' | напомнить: ' + FormatDateTime('dd.mm.yyyy hh:nn', DateTimePickerReminder.DateTime)
  else
    ReminderText := '';

  TaskText := EditTask.Text + ReminderText;
  ListBoxTasks.Items.Add(TaskText);

  SaveTasksToFile;

  EditTask.Clear;
  EditTask.SetFocus;
  CheckBoxReminder.Checked := False;
end;

procedure TForm1.BtnDeleteClick(Sender: TObject);
begin
  if ListBoxTasks.ItemIndex >= 0 then
  begin
    ListBoxTasks.Items.Delete(ListBoxTasks.ItemIndex);
    SaveTasksToFile;
  end;
end;

procedure TForm1.NotifyUser(const Msg: string);
begin
  // Проигрываем звук сразу
  PlaySound('C:\Windows\Media\Alarm01.wav', 0, SND_FILENAME or SND_ASYNC);

  // Показываем модальное окно
  MessageDlg(Msg, mtInformation, [mbOK], 0);

  // Останавливаем звук после нажатия ОК
  PlaySound(nil, 0, 0);
end;

procedure TForm1.TimerCheckTimer(Sender: TObject);
var
  i: Integer;
  TaskLine, TaskText, TaskTimeStr: string;
  TaskTime: TDateTime;
  PosReminder: Integer;
begin
  for i := ListBoxTasks.Items.Count - 1 downto 0 do
  begin
    TaskLine := ListBoxTasks.Items[i];
    PosReminder := Pos(' | напомнить: ', TaskLine);
    if PosReminder > 0 then
    begin
      TaskText := Copy(TaskLine, 1, PosReminder - 1);
      TaskTimeStr := Trim(Copy(TaskLine, PosReminder + 14, 16));
      try
        TaskTime := StrToDateTime(TaskTimeStr);
        if Abs(SecondsBetween(Now, TaskTime)) <= 1 then
        begin
          NotifyUser('Напоминание: ' + TaskText);
          ListBoxTasks.Items.Delete(i);
          SaveTasksToFile;
        end;
      except
        // игнорировать ошибку парсинга даты
      end;
    end;
  end;
end;

end.

